# Generated by LakehousePlumber
# Pipeline: acmi_edw_raw_ingestions
# FlowGroup: nation_ingestion

from pyspark.sql import functions as F
import dlt

# Pipeline Configuration
PIPELINE_ID = "acmi_edw_raw_ingestions"
FLOWGROUP_ID = "nation_ingestion"

# ============================================================================
# SOURCE VIEWS
# ============================================================================

@dlt.view()
def v_nation_raw_cloudfiles():
    """Load nation_raw Parquet files from landing volume"""
    df = spark.readStream \
        .format("cloudFiles") \
        .option("cloudFiles.format", "parquet") \
        .option("cloudFiles.maxFilesPerTrigger", 50) \
        .option("cloudFiles.inferColumnTypes", True) \
        .option("cloudFiles.schemaEvolutionMode", "addNewColumns") \
        .option("cloudFiles.rescuedDataColumn", "_rescued_data") \
        .load("/Volumes/acmi_edw_dev/edw_raw/landing_volume/nation/*.parquet")


    # Add operational metadata columns
    df = df.withColumn('_processing_timestamp', F.current_timestamp())
    df = df.withColumn('_source_file_path', F.col('_metadata.file_path'))

    return df


# ============================================================================
# TARGET TABLES
# ============================================================================

# Create the streaming table
dlt.create_streaming_table(
    name="acmi_edw_dev.edw_raw.nation_raw",
    comment="Streaming table: nation_raw")


# Define append flow(s)
@dlt.append_flow(
    target="acmi_edw_dev.edw_raw.nation_raw",
    name="f_nation_raw_cloudfiles",
    comment="Append flow to acmi_edw_dev.edw_raw.nation_raw"
)
def f_nation_raw_cloudfiles():
    """Append flow to acmi_edw_dev.edw_raw.nation_raw"""
    # Streaming flow
    df = spark.readStream.table("v_nation_raw_cloudfiles")

    return df
